services:
  # Frontend development server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  # Backend API server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - WEAVE_PROJECT_NAME=${WEAVE_PROJECT_NAME:-}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=productivity_tracker
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - ENVIRONMENT=development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - app-network

  # PostgreSQL database with pgvector
  postgres:
    image: ankane/pgvector:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=productivity_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d productivity_tracker"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - app-network
    # Performance optimizations
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: >
      postgres 
      -c shared_buffers=256MB 
      -c max_connections=200 
      -c work_mem=16MB

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
